from collections import OrderedDict
import torch

a = ["conv1.weight", "bn1.weight", "bn1.bias", "bn1.running_mean", "bn1.running_var", "layer1.0.conv1.weight", "layer1.0.bn1.weight", "layer1.0.bn1.bias", "layer1.0.bn1.running_mean", "layer1.0.bn1.running_var", "layer1.0.conv2.weight", "layer1.0.bn2.weight", "layer1.0.bn2.bias", "layer1.0.bn2.running_mean", "layer1.0.bn2.running_var", "layer1.0.conv3.weight", "layer1.0.bn3.weight", "layer1.0.bn3.bias", "layer1.0.bn3.running_mean", "layer1.0.bn3.running_var", "layer1.0.downsample.0.weight", "layer1.0.downsample.1.weight", "layer1.0.downsample.1.bias", "layer1.0.downsample.1.running_mean", "layer1.0.downsample.1.running_var", "layer1.1.conv1.weight", "layer1.1.bn1.weight", "layer1.1.bn1.bias", "layer1.1.bn1.running_mean", "layer1.1.bn1.running_var", "layer1.1.conv2.weight", "layer1.1.bn2.weight", "layer1.1.bn2.bias", "layer1.1.bn2.running_mean", "layer1.1.bn2.running_var", "layer1.1.conv3.weight", "layer1.1.bn3.weight", "layer1.1.bn3.bias", "layer1.1.bn3.running_mean", "layer1.1.bn3.running_var", "layer1.2.conv1.weight", "layer1.2.bn1.weight", "layer1.2.bn1.bias", "layer1.2.bn1.running_mean", "layer1.2.bn1.running_var", "layer1.2.conv2.weight", "layer1.2.bn2.weight", "layer1.2.bn2.bias", "layer1.2.bn2.running_mean", "layer1.2.bn2.running_var", "layer1.2.conv3.weight", "layer1.2.bn3.weight", "layer1.2.bn3.bias", "layer1.2.bn3.running_mean", "layer1.2.bn3.running_var", "layer2.0.conv1.weight", "layer2.0.bn1.weight", "layer2.0.bn1.bias", "layer2.0.bn1.running_mean", "layer2.0.bn1.running_var", "layer2.0.conv2.weight", "layer2.0.bn2.weight", "layer2.0.bn2.bias", "layer2.0.bn2.running_mean", "layer2.0.bn2.running_var", "layer2.0.conv3.weight", "layer2.0.bn3.weight", "layer2.0.bn3.bias", "layer2.0.bn3.running_mean", "layer2.0.bn3.running_var", "layer2.0.downsample.0.weight", "layer2.0.downsample.1.weight", "layer2.0.downsample.1.bias", "layer2.0.downsample.1.running_mean", "layer2.0.downsample.1.running_var", "layer2.1.conv1.weight", "layer2.1.bn1.weight", "layer2.1.bn1.bias", "layer2.1.bn1.running_mean", "layer2.1.bn1.running_var", "layer2.1.conv2.weight", "layer2.1.bn2.weight", "layer2.1.bn2.bias", "layer2.1.bn2.running_mean", "layer2.1.bn2.running_var", "layer2.1.conv3.weight", "layer2.1.bn3.weight", "layer2.1.bn3.bias", "layer2.1.bn3.running_mean", "layer2.1.bn3.running_var", "layer2.2.conv1.weight", "layer2.2.bn1.weight", "layer2.2.bn1.bias", "layer2.2.bn1.running_mean", "layer2.2.bn1.running_var", "layer2.2.conv2.weight", "layer2.2.bn2.weight", "layer2.2.bn2.bias", "layer2.2.bn2.running_mean", "layer2.2.bn2.running_var", "layer2.2.conv3.weight", "layer2.2.bn3.weight", "layer2.2.bn3.bias", "layer2.2.bn3.running_mean", "layer2.2.bn3.running_var", "layer2.3.conv1.weight", "layer2.3.bn1.weight", "layer2.3.bn1.bias", "layer2.3.bn1.running_mean", "layer2.3.bn1.running_var", "layer2.3.conv2.weight", "layer2.3.bn2.weight", "layer2.3.bn2.bias", "layer2.3.bn2.running_mean", "layer2.3.bn2.running_var", "layer2.3.conv3.weight", "layer2.3.bn3.weight", "layer2.3.bn3.bias", "layer2.3.bn3.running_mean", "layer2.3.bn3.running_var", "layer3.0.conv1.weight", "layer3.0.bn1.weight", "layer3.0.bn1.bias", "layer3.0.bn1.running_mean", "layer3.0.bn1.running_var", "layer3.0.conv2.weight", "layer3.0.bn2.weight", "layer3.0.bn2.bias", "layer3.0.bn2.running_mean", "layer3.0.bn2.running_var", "layer3.0.conv3.weight", "layer3.0.bn3.weight", "layer3.0.bn3.bias", "layer3.0.bn3.running_mean", "layer3.0.bn3.running_var", "layer3.0.downsample.0.weight", "layer3.0.downsample.1.weight", "layer3.0.downsample.1.bias", "layer3.0.downsample.1.running_mean", "layer3.0.downsample.1.running_var", "layer3.1.conv1.weight", "layer3.1.bn1.weight", "layer3.1.bn1.bias", "layer3.1.bn1.running_mean", "layer3.1.bn1.running_var", "layer3.1.conv2.weight", "layer3.1.bn2.weight", "layer3.1.bn2.bias", "layer3.1.bn2.running_mean", "layer3.1.bn2.running_var", "layer3.1.conv3.weight", "layer3.1.bn3.weight", "layer3.1.bn3.bias", "layer3.1.bn3.running_mean", "layer3.1.bn3.running_var", "layer3.2.conv1.weight", "layer3.2.bn1.weight", "layer3.2.bn1.bias", "layer3.2.bn1.running_mean", "layer3.2.bn1.running_var", "layer3.2.conv2.weight", "layer3.2.bn2.weight", "layer3.2.bn2.bias", "layer3.2.bn2.running_mean", "layer3.2.bn2.running_var", "layer3.2.conv3.weight", "layer3.2.bn3.weight", "layer3.2.bn3.bias", "layer3.2.bn3.running_mean", "layer3.2.bn3.running_var", "layer3.3.conv1.weight", "layer3.3.bn1.weight", "layer3.3.bn1.bias", "layer3.3.bn1.running_mean", "layer3.3.bn1.running_var", "layer3.3.conv2.weight", "layer3.3.bn2.weight", "layer3.3.bn2.bias", "layer3.3.bn2.running_mean", "layer3.3.bn2.running_var", "layer3.3.conv3.weight", "layer3.3.bn3.weight", "layer3.3.bn3.bias", "layer3.3.bn3.running_mean", "layer3.3.bn3.running_var", "layer3.4.conv1.weight", "layer3.4.bn1.weight", "layer3.4.bn1.bias", "layer3.4.bn1.running_mean", "layer3.4.bn1.running_var", "layer3.4.conv2.weight", "layer3.4.bn2.weight", "layer3.4.bn2.bias", "layer3.4.bn2.running_mean", "layer3.4.bn2.running_var", "layer3.4.conv3.weight", "layer3.4.bn3.weight", "layer3.4.bn3.bias", "layer3.4.bn3.running_mean", "layer3.4.bn3.running_var", "layer3.5.conv1.weight", "layer3.5.bn1.weight", "layer3.5.bn1.bias", "layer3.5.bn1.running_mean", "layer3.5.bn1.running_var", "layer3.5.conv2.weight", "layer3.5.bn2.weight", "layer3.5.bn2.bias", "layer3.5.bn2.running_mean", "layer3.5.bn2.running_var", "layer3.5.conv3.weight", "layer3.5.bn3.weight", "layer3.5.bn3.bias", "layer3.5.bn3.running_mean", "layer3.5.bn3.running_var", "layer4.0.conv1.weight", "layer4.0.bn1.weight", "layer4.0.bn1.bias", "layer4.0.bn1.running_mean", "layer4.0.bn1.running_var", "layer4.0.conv2.weight", "layer4.0.bn2.weight", "layer4.0.bn2.bias", "layer4.0.bn2.running_mean", "layer4.0.bn2.running_var", "layer4.0.conv3.weight", "layer4.0.bn3.weight", "layer4.0.bn3.bias", "layer4.0.bn3.running_mean", "layer4.0.bn3.running_var", "layer4.0.downsample.0.weight", "layer4.0.downsample.1.weight", "layer4.0.downsample.1.bias", "layer4.0.downsample.1.running_mean", "layer4.0.downsample.1.running_var", "layer4.1.conv1.weight", "layer4.1.bn1.weight", "layer4.1.bn1.bias", "layer4.1.bn1.running_mean", "layer4.1.bn1.running_var", "layer4.1.conv2.weight", "layer4.1.bn2.weight", "layer4.1.bn2.bias", "layer4.1.bn2.running_mean", "layer4.1.bn2.running_var", "layer4.1.conv3.weight", "layer4.1.bn3.weight", "layer4.1.bn3.bias", "layer4.1.bn3.running_mean", "layer4.1.bn3.running_var", "layer4.2.conv1.weight", "layer4.2.bn1.weight", "layer4.2.bn1.bias", "layer4.2.bn1.running_mean", "layer4.2.bn1.running_var", "layer4.2.conv2.weight", "layer4.2.bn2.weight", "layer4.2.bn2.bias", "layer4.2.bn2.running_mean", "layer4.2.bn2.running_var", "layer4.2.conv3.weight", "layer4.2.bn3.weight", "layer4.2.bn3.bias", "layer4.2.bn3.running_mean", "layer4.2.bn3.running_var", "fc.weight", "fc.bias"]
b = ["conv1_7x7_s2.weight", "conv1_7x7_s2_bn.weight", "conv1_7x7_s2_bn.bias", "conv1_7x7_s2_bn.running_mean", "conv1_7x7_s2_bn.running_var", "conv2_1_1x1_reduce.weight", "conv2_1_1x1_reduce_bn.weight", "conv2_1_1x1_reduce_bn.bias", "conv2_1_1x1_reduce_bn.running_mean", "conv2_1_1x1_reduce_bn.running_var", "conv2_1_3x3.weight", "conv2_1_3x3_bn.weight", "conv2_1_3x3_bn.bias", "conv2_1_3x3_bn.running_mean", "conv2_1_3x3_bn.running_var", "conv2_1_1x1_increase.weight", "conv2_1_1x1_increase_bn.weight", "conv2_1_1x1_increase_bn.bias", "conv2_1_1x1_increase_bn.running_mean", "conv2_1_1x1_increase_bn.running_var", "conv2_1_1x1_proj.weight", "conv2_1_1x1_proj_bn.weight", "conv2_1_1x1_proj_bn.bias", "conv2_1_1x1_proj_bn.running_mean", "conv2_1_1x1_proj_bn.running_var", "conv2_2_1x1_reduce.weight", "conv2_2_1x1_reduce_bn.weight", "conv2_2_1x1_reduce_bn.bias", "conv2_2_1x1_reduce_bn.running_mean", "conv2_2_1x1_reduce_bn.running_var", "conv2_2_3x3.weight", "conv2_2_3x3_bn.weight", "conv2_2_3x3_bn.bias", "conv2_2_3x3_bn.running_mean", "conv2_2_3x3_bn.running_var", "conv2_2_1x1_increase.weight", "conv2_2_1x1_increase_bn.weight", "conv2_2_1x1_increase_bn.bias", "conv2_2_1x1_increase_bn.running_mean", "conv2_2_1x1_increase_bn.running_var", "conv2_3_1x1_reduce.weight", "conv2_3_1x1_reduce_bn.weight", "conv2_3_1x1_reduce_bn.bias", "conv2_3_1x1_reduce_bn.running_mean", "conv2_3_1x1_reduce_bn.running_var", "conv2_3_3x3.weight", "conv2_3_3x3_bn.weight", "conv2_3_3x3_bn.bias", "conv2_3_3x3_bn.running_mean", "conv2_3_3x3_bn.running_var", "conv2_3_1x1_increase.weight", "conv2_3_1x1_increase_bn.weight", "conv2_3_1x1_increase_bn.bias", "conv2_3_1x1_increase_bn.running_mean", "conv2_3_1x1_increase_bn.running_var", "conv3_1_1x1_reduce.weight", "conv3_1_1x1_reduce_bn.weight", "conv3_1_1x1_reduce_bn.bias", "conv3_1_1x1_reduce_bn.running_mean", "conv3_1_1x1_reduce_bn.running_var", "conv3_1_3x3.weight", "conv3_1_3x3_bn.weight", "conv3_1_3x3_bn.bias", "conv3_1_3x3_bn.running_mean", "conv3_1_3x3_bn.running_var", "conv3_1_1x1_increase.weight", "conv3_1_1x1_increase_bn.weight", "conv3_1_1x1_increase_bn.bias", "conv3_1_1x1_increase_bn.running_mean", "conv3_1_1x1_increase_bn.running_var", "conv3_1_1x1_proj.weight", "conv3_1_1x1_proj_bn.weight", "conv3_1_1x1_proj_bn.bias", "conv3_1_1x1_proj_bn.running_mean", "conv3_1_1x1_proj_bn.running_var", "conv3_2_1x1_reduce.weight", "conv3_2_1x1_reduce_bn.weight", "conv3_2_1x1_reduce_bn.bias", "conv3_2_1x1_reduce_bn.running_mean", "conv3_2_1x1_reduce_bn.running_var", "conv3_2_3x3.weight", "conv3_2_3x3_bn.weight", "conv3_2_3x3_bn.bias", "conv3_2_3x3_bn.running_mean", "conv3_2_3x3_bn.running_var", "conv3_2_1x1_increase.weight", "conv3_2_1x1_increase_bn.weight", "conv3_2_1x1_increase_bn.bias", "conv3_2_1x1_increase_bn.running_mean", "conv3_2_1x1_increase_bn.running_var", "conv3_3_1x1_reduce.weight", "conv3_3_1x1_reduce_bn.weight", "conv3_3_1x1_reduce_bn.bias", "conv3_3_1x1_reduce_bn.running_mean", "conv3_3_1x1_reduce_bn.running_var", "conv3_3_3x3.weight", "conv3_3_3x3_bn.weight", "conv3_3_3x3_bn.bias", "conv3_3_3x3_bn.running_mean", "conv3_3_3x3_bn.running_var", "conv3_3_1x1_increase.weight", "conv3_3_1x1_increase_bn.weight", "conv3_3_1x1_increase_bn.bias", "conv3_3_1x1_increase_bn.running_mean", "conv3_3_1x1_increase_bn.running_var", "conv3_4_1x1_reduce.weight", "conv3_4_1x1_reduce_bn.weight", "conv3_4_1x1_reduce_bn.bias", "conv3_4_1x1_reduce_bn.running_mean", "conv3_4_1x1_reduce_bn.running_var", "conv3_4_3x3.weight", "conv3_4_3x3_bn.weight", "conv3_4_3x3_bn.bias", "conv3_4_3x3_bn.running_mean", "conv3_4_3x3_bn.running_var", "conv3_4_1x1_increase.weight", "conv3_4_1x1_increase_bn.weight", "conv3_4_1x1_increase_bn.bias", "conv3_4_1x1_increase_bn.running_mean", "conv3_4_1x1_increase_bn.running_var", "conv4_1_1x1_reduce.weight", "conv4_1_1x1_reduce_bn.weight", "conv4_1_1x1_reduce_bn.bias", "conv4_1_1x1_reduce_bn.running_mean", "conv4_1_1x1_reduce_bn.running_var", "conv4_1_3x3.weight", "conv4_1_3x3_bn.weight", "conv4_1_3x3_bn.bias", "conv4_1_3x3_bn.running_mean", "conv4_1_3x3_bn.running_var", "conv4_1_1x1_increase.weight", "conv4_1_1x1_increase_bn.weight", "conv4_1_1x1_increase_bn.bias", "conv4_1_1x1_increase_bn.running_mean", "conv4_1_1x1_increase_bn.running_var", "conv4_1_1x1_proj.weight", "conv4_1_1x1_proj_bn.weight", "conv4_1_1x1_proj_bn.bias", "conv4_1_1x1_proj_bn.running_mean", "conv4_1_1x1_proj_bn.running_var", "conv4_2_1x1_reduce.weight", "conv4_2_1x1_reduce_bn.weight", "conv4_2_1x1_reduce_bn.bias", "conv4_2_1x1_reduce_bn.running_mean", "conv4_2_1x1_reduce_bn.running_var", "conv4_2_3x3.weight", "conv4_2_3x3_bn.weight", "conv4_2_3x3_bn.bias", "conv4_2_3x3_bn.running_mean", "conv4_2_3x3_bn.running_var", "conv4_2_1x1_increase.weight", "conv4_2_1x1_increase_bn.weight", "conv4_2_1x1_increase_bn.bias", "conv4_2_1x1_increase_bn.running_mean", "conv4_2_1x1_increase_bn.running_var", "conv4_3_1x1_reduce.weight", "conv4_3_1x1_reduce_bn.weight", "conv4_3_1x1_reduce_bn.bias", "conv4_3_1x1_reduce_bn.running_mean", "conv4_3_1x1_reduce_bn.running_var", "conv4_3_3x3.weight", "conv4_3_3x3_bn.weight", "conv4_3_3x3_bn.bias", "conv4_3_3x3_bn.running_mean", "conv4_3_3x3_bn.running_var", "conv4_3_1x1_increase.weight", "conv4_3_1x1_increase_bn.weight", "conv4_3_1x1_increase_bn.bias", "conv4_3_1x1_increase_bn.running_mean", "conv4_3_1x1_increase_bn.running_var", "conv4_4_1x1_reduce.weight", "conv4_4_1x1_reduce_bn.weight", "conv4_4_1x1_reduce_bn.bias", "conv4_4_1x1_reduce_bn.running_mean", "conv4_4_1x1_reduce_bn.running_var", "conv4_4_3x3.weight", "conv4_4_3x3_bn.weight", "conv4_4_3x3_bn.bias", "conv4_4_3x3_bn.running_mean", "conv4_4_3x3_bn.running_var", "conv4_4_1x1_increase.weight", "conv4_4_1x1_increase_bn.weight", "conv4_4_1x1_increase_bn.bias", "conv4_4_1x1_increase_bn.running_mean", "conv4_4_1x1_increase_bn.running_var", "conv4_5_1x1_reduce.weight", "conv4_5_1x1_reduce_bn.weight", "conv4_5_1x1_reduce_bn.bias", "conv4_5_1x1_reduce_bn.running_mean", "conv4_5_1x1_reduce_bn.running_var", "conv4_5_3x3.weight", "conv4_5_3x3_bn.weight", "conv4_5_3x3_bn.bias", "conv4_5_3x3_bn.running_mean", "conv4_5_3x3_bn.running_var", "conv4_5_1x1_increase.weight", "conv4_5_1x1_increase_bn.weight", "conv4_5_1x1_increase_bn.bias", "conv4_5_1x1_increase_bn.running_mean", "conv4_5_1x1_increase_bn.running_var", "conv4_6_1x1_reduce.weight", "conv4_6_1x1_reduce_bn.weight", "conv4_6_1x1_reduce_bn.bias", "conv4_6_1x1_reduce_bn.running_mean", "conv4_6_1x1_reduce_bn.running_var", "conv4_6_3x3.weight", "conv4_6_3x3_bn.weight", "conv4_6_3x3_bn.bias", "conv4_6_3x3_bn.running_mean", "conv4_6_3x3_bn.running_var", "conv4_6_1x1_increase.weight", "conv4_6_1x1_increase_bn.weight", "conv4_6_1x1_increase_bn.bias", "conv4_6_1x1_increase_bn.running_mean", "conv4_6_1x1_increase_bn.running_var", "conv5_1_1x1_reduce.weight", "conv5_1_1x1_reduce_bn.weight", "conv5_1_1x1_reduce_bn.bias", "conv5_1_1x1_reduce_bn.running_mean", "conv5_1_1x1_reduce_bn.running_var", "conv5_1_3x3.weight", "conv5_1_3x3_bn.weight", "conv5_1_3x3_bn.bias", "conv5_1_3x3_bn.running_mean", "conv5_1_3x3_bn.running_var", "conv5_1_1x1_increase.weight", "conv5_1_1x1_increase_bn.weight", "conv5_1_1x1_increase_bn.bias", "conv5_1_1x1_increase_bn.running_mean", "conv5_1_1x1_increase_bn.running_var", "conv5_1_1x1_proj.weight", "conv5_1_1x1_proj_bn.weight", "conv5_1_1x1_proj_bn.bias", "conv5_1_1x1_proj_bn.running_mean", "conv5_1_1x1_proj_bn.running_var", "conv5_2_1x1_reduce.weight", "conv5_2_1x1_reduce_bn.weight", "conv5_2_1x1_reduce_bn.bias", "conv5_2_1x1_reduce_bn.running_mean", "conv5_2_1x1_reduce_bn.running_var", "conv5_2_3x3.weight", "conv5_2_3x3_bn.weight", "conv5_2_3x3_bn.bias", "conv5_2_3x3_bn.running_mean", "conv5_2_3x3_bn.running_var", "conv5_2_1x1_increase.weight", "conv5_2_1x1_increase_bn.weight", "conv5_2_1x1_increase_bn.bias", "conv5_2_1x1_increase_bn.running_mean", "conv5_2_1x1_increase_bn.running_var", "conv5_3_1x1_reduce.weight", "conv5_3_1x1_reduce_bn.weight", "conv5_3_1x1_reduce_bn.bias", "conv5_3_1x1_reduce_bn.running_mean", "conv5_3_1x1_reduce_bn.running_var", "conv5_3_3x3.weight", "conv5_3_3x3_bn.weight", "conv5_3_3x3_bn.bias", "conv5_3_3x3_bn.running_mean", "conv5_3_3x3_bn.running_var", "conv5_3_1x1_increase.weight", "conv5_3_1x1_increase_bn.weight", "conv5_3_1x1_increase_bn.bias", "conv5_3_1x1_increase_bn.running_mean", "conv5_3_1x1_increase_bn.running_var", "classifier.weight", "classifier.bias"]

model = torch.load('../data/pretrained/resnet50_ft_dag_original.pth')
new_dict = OrderedDict()

for idx in range(len(b)):
    if idx == len(b) - 2:
        new_dict[a[idx]] = model[b[idx]].view(model[b[idx]].size(0), model[b[idx]].size(1))
        print(new_dict[a[idx]].shape)
    else:
        new_dict[a[idx]] = model[b[idx]]

    # if idx >= len(b) - 5:
    #     new_dict["fc.bias"] = {}
    #     new_dict["fc.weight"] = {}
    # else:
    #     new_dict[a[idx]] = model[b[idx]]

torch.save(new_dict, '../data/pretrained/resnet50_ft_dag.pth')
